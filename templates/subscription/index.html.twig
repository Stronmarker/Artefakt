{% extends 'base.logged.html.twig' %}

{% block title %}Abonnements{% endblock %}

{% block body %}
<style>
    .centered-container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        min-height: 80vh;
    }

    .card-shadow {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1), 0 6px 20px rgba(0, 0, 0, 0.1), 0 0 15px white;
        border-radius: 20px;
        border: 7px solid #000;
        width: 100%;
        max-width: 600px;
        padding: 20px;
    }

    .centered-title {
        margin-bottom: 20px;
    }

    .card-title {
        margin-bottom: 10px;
    }
</style>

<div class="container centered-container mb-4">
    <h1 class="text-center text-white centered-title ft_orbitron">Notre Offre Premium</h1>
    <div class="card card-shadow">
        <div class="card-body">
            <h5 class="card-title text-success fw-bold text-center ft_orbitron">Abonnement Premium</h5>
            <h6 class="card-subtitle mb-2 text-dark fw-bold text-center ft_audiowide">€20/mois</h6>
            <ul class="list-unstyled">
                <li class="ft_audiowide text-center">Projets illimités</li>
                <li class="ft_audiowide text-center">Outils illimités</li>
                <li class="ft_audiowide text-center">Assistance par e-mail</li>
                <li class="ft_audiowide text-center">Accès au centre d'aide</li>
            </ul>

            {% if not isSubscribed %}
            <form id="subscription-form">
                <input type="text" id="last-name" placeholder="Nom complet du titulaire de la carte" required class="form-control mb-3" value="{{ user.lastname }}" />
                <input type="text" id="address" placeholder="Adresse" required class="form-control mb-3" value="{{ user.address }}" />
                <input type="text" id="city" placeholder="Ville" required class="form-control mb-3" value="{{ user.city }}" />
                <input type="text" id="postal_code" placeholder="Code postal" required class="form-control mb-3" value="{{ user.postalCode }}" /> 
                <input type="text" id="state" placeholder="Département" required class="form-control mb-3" value="{{ user.state }}" />
                <input type="text" id="country" placeholder="Pays" required class="form-control mb-3" value="{{ user.country }}" />
                <input type="email" id="email" placeholder="Email" required class="form-control mb-3" value="{{ user.email }}" />
                <div id="card-element" class="form-control mb-3"></div>
                <button type="submit" class="btn btn-success mt-3 fw-bold d-block mx-auto ft_wallpoet">Souscrire</button>
            </form>
            {% else %}
            <p class="text-center text-success fw-bold ft_orbitron">Vous êtes déjà abonné. Merci !</p>
            {% endif %}
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{% if not isSubscribed %}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script src="https://js.stripe.com/v3/"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const stripe = Stripe('{{ public_key }}');
        const elements = stripe.elements();
        const cardElement = elements.create('card');
        cardElement.mount('#card-element');

        const user = {
            lastName: '{{ user.lastname }}',
            email: '{{ user.email }}',
            address: '{{ user.address }}',
            city: '{{ user.city }}',
            state: '{{ user.state }}',
            postalCode: '{{ user.postalCode }}',
            country: '{{ user.country }}'
        };

        document.getElementById('subscription-form').addEventListener('submit', async (event) => {
            event.preventDefault();

            const { error, paymentMethod } = await stripe.createPaymentMethod({
                type: 'card',
                card: cardElement,
                billing_details: {
                    name: user.lastName,
                    email: user.email,
                    address: {
                        line1: user.address,
                        city: user.city,
                        postal_code: user.postalCode,
                        state: user.state,
                        country: user.country
                    }
                }
            });

            if (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Erreur',
                    text: error.message,
                });
            } else {
                fetch('{{ path("app_subscribe") }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({
                        last_name: lastName,
                        email: email,
                        address: address,
                        city: city,
                        postal_code: postalCode,
                        state: state,
                        country: country,
                        payment_method: paymentMethod.id // Envoie l'ID de la méthode de paiement au serveur
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Abonnement réussi',
                            text: 'Merci pour votre abonnement !',
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Erreur',
                            text: data.message,
                        });
                    }
                });
            }
        });
    });
</script>
{% endif %}
{% endblock %}
